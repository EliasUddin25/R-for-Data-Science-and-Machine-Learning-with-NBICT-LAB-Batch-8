5+5
23+56
23+56
-> 23+56
data = c(9, 6, 17, 31, 11)
mean(data)
summary(data)
setwd("C:/Users/elias/OneDrive/Data Science and Machine Learning/R-for-Data-Science-and-Machine-Learning-with-NBICT-LAB-Batch-8/RDSML-Day-14 ðŸ‘‰ Histogram in R (Part-2)")
# Importing the dataset
dataset <- read.csv('data.csv')
# Importing the library
library(ggplot2)
# Creating the basic histogram
ggplot(dataset, aes(x = weight)) +
geom_histogram()
# Creating the basic histogram
ggplot(dataset, aes(x = weight)) +
geom_histogram(color = 'white')
View(dataset)
# Changing histogram plot line colors by groups
ggplot(dataset, aes(x = weight, fill = sex)) +
geom_histogram(color = 'white')
# Changing histogram plot line colors by groups
ggplot(dataset, aes(x = weight, fill = sex)) +
geom_histogram(color = 'white', alpha = 0.5)
# Changing histogram plot line colors by groups
ggplot(dataset, aes(x = weight, fill = sex)) +
geom_histogram(color = 'white', alpha = 0.5, position = 'identity')
# Interleaved histograms
ggplot(dataset, aes(x = weight, fill = sex)) +
geom_histogram(color = 'white', alpha = 0.5, position = 'dodge')
# Interleaved histograms
ggplot(dataset, aes(x = weight, fill = sex)) +
geom_histogram(color = 'white', alpha = 0.5, position = 'dodge')
# Interleaved histograms
ggplot(dataset, aes(x = weight, fill = sex)) +
geom_histogram(color = 'white', alpha = 0.5, position = 'dodge') +
theme(legend.position = 'top')
# The plyr package is used to calculate the mean weight of each group
install.packages('plyr')
# The plyr package is used to calculate the mean weight of each group
install.packages("plyr")
# The plyr package is used to calculate the mean weight of each group
# install.packages("plyr")
library(plyr)
group_means = ddply(dataset, "sex", summarise, grp.mean = mean(weight))
group_means
myPlot = ggplot(dataset, aes(x = weight, fill = sex)) +
geom_histogram(color = 'white', alpha = 0.5, position = 'dodge') +
geom_vline(data = group_means, aes(xintercept = grp.mean))
theme(legend.position = 'top')
myPlot
myPlot = ggplot(dataset, aes(x = weight, fill = sex)) +
geom_histogram(color = 'white', alpha = 0.5, position = 'dodge') +
geom_vline(data = group_means, aes(xintercept = grp.mean, color = sex),
linetype = "dashed") +
theme(legend.position = 'top')
myPlot
# Using custom color palettes
myPlot + scale_color_manual(values = c("red", "blue")) +
scale_fill_manual(values = c("green", "orange"))
myPlot = ggplot(dataset, aes(x = weight, fill = sex)) +
geom_histogram(color = 'white', alpha = 1, position = 'dodge') +
geom_vline(data = group_means, aes(xintercept = grp.mean, color = sex),
linetype = "dashed") +
theme(legend.position = 'top')
myPlot
# Using custom color palettes
myPlot + scale_color_manual(values = c("red", "blue")) +
scale_fill_manual(values = c("green", "orange"))
# Using custom color palettes
myPlot + scale_color_manual(values = c("#999999", "#E69F00")) +
scale_fill_manual(values = c("#999999", "#E69F00"))
# Using brewer color palettes
myPlot + scale_color_brewer(palette = "Dark 2") +
scale_fill_brewer(palette = "Dark 2")
myPlot + scale_color_brewer(palette = "Dark2") +
scale_fill_brewer(palette = "Dark2")
# Using a grey scale
myPlot + scale_color_grey()+ scale_fill_grey()
# Using a grey scale
myPlot + scale_color_grey() + scale_fill_grey()
# Using a grey scale
myPlot + scale_color_grey() + scale_fill_grey() +
theme_classic()
